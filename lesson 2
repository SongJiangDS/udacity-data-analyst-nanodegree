import sys
sys.path.append("E:/Data Science/ML/ud120-projects/tools/")
sys.path.append('E:/Data Science/ML/ud120-projects/choose_your_own')
sys.path.append('E:/Data Science/ML/ud120-projects/svm')

import os
os.chdir('E:/Data Science/ML/ud120-projects/svm')

from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

from time import time
from email_preprocess import preprocess


### features_train and features_test are the features for the training
### and testing datasets, respectively
### labels_train and labels_test are the corresponding item labels
features_train, features_test, labels_train, labels_test = preprocess()


def my_svm(features_train, features_test, labels_train, labels_test, kernel='linear', C=1.0):
    # the classifier
    clf = SVC(kernel=kernel, C=C)

    # train
    t0 = time()
    clf.fit(features_train, labels_train)
    print "\ntraining time:", round(time()-t0, 3), "s"

    # predict
    t0 = time()
    pred = clf.predict(features_test)
    print "predicting time:", round(time()-t0, 3), "s"

    accuracy = accuracy_score(pred, labels_test)

    print '\naccuracy = {0}'.format(accuracy)
    return pred

pred = my_svm(features_train, features_test, labels_train, labels_test)

features_train2 = features_train[:len(features_train)/100] 
labels_train2 = labels_train[:len(labels_train)/100] 

pred = my_svm(features_train2, features_test, labels_train2, labels_test)

pred = my_svm(features_train2, features_test, labels_train2, labels_test, 'rbf')



for C in [10, 100, 1000, 10000]:
    print 'C =',C,
    pred = my_svm(features_train2, features_test, labels_train2, labels_test, kernel='rbf', C=C)
    print '\n\n'
    
pred = my_svm(features_train, features_test, labels_train, labels_test, kernel='rbf', C=10000)


print pred[10]
print pred[26]
print pred[50]


print sum(pred)
